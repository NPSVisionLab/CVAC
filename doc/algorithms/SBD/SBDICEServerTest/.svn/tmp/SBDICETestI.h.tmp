#ifndef _SBDICETESTI_H__
#define _SBDICETESTI_H__

#include <Data.h>
#include <Services.h>
#include <SBDCV.h>

#include <Ice/Ice.h>
#include <IceBox/IceBox.h>
#include <IceUtil/UUID.h>
#include <CVACUtil/processRunSet.h>
#include <CVACUtil/FileUtils.h>

#ifdef WIN32
#include <Windows.h>
#endif

#define svmResult_xml		"svm_Result.xml.gz"


class SBDICETestI : public cvac::Detector
{
public:
    SBDICETestI();
    ~SBDICETestI();
      
    static std::string m_CVAC_DataDir; // Store an absolute path to the detector data files
    static int m_verbosity;

    virtual void initialize(::Ice::Int verbosity,const ::cvac::DetectorData& data,const ::Ice::Current& current);
    virtual void process(const Ice::Identity &client,const ::cvac::RunSet& runset,const ::Ice::Current& current);
    virtual bool isInitialized(const ::Ice::Current& current);
    void destroy(const ::Ice::Current& current);
    std::string getName(const ::Ice::Current& current);
    std::string getDescription(const ::Ice::Current& current);
    void setVerbosity(::Ice::Int verbosity, const ::Ice::Current& current);

    virtual cvac::DetectorData createCopyOfDetectorData(const ::Ice::Current& current);
    virtual cvac::DetectorPropertiesPrx getDetectorProperties(const ::Ice::Current& current);

private:
    SBDCV*    pSBDCV;
    bool    fInitialized;    
    static cvac::ResultSetV2 processSingleVideo(cvac::DetectorPtr detector,const char* fullfilename);
};

#endif //_SBDICETESTI_H__
